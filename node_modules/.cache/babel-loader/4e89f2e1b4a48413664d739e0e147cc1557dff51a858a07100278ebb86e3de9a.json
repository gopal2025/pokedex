{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project2-PokedexLite-main\\\\Project2-PokedexLite-main\\\\src\\\\Assets\\\\Species\\\\Encounters.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport versions from \"../versions\";\nimport versionOrder from \"../versionOrder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Encounters(props) {\n  _s();\n  const [encounterList, setEncounterList] = useState();\n  const [currentVersion, setCurrentVersion] = useState(0);\n  function processEncounters(props) {\n    let myList = {};\n    let newList = [];\n    props.forEach(data => {\n      let locationUrl = data.location_area.url;\n      let locationName = data.location_area.name.split(\"-\");\n      locationName = locationName.map(data => {\n        if (/\\d/.test(data) || data.length < 2) {\n          return data.toUpperCase();\n        } else {\n          return data[0].toUpperCase() + data.substring(1, data.length);\n        }\n      }).join(\" \");\n      data.version_details.forEach(data => {\n        if (Object.hasOwn(myList, data.version.name)) {\n          myList[data.version.name].push({\n            name: locationName,\n            url: locationUrl\n          });\n        } else {\n          myList[data.version.name] = [{\n            name: locationName,\n            url: locationUrl\n          }];\n        }\n      });\n    });\n    for (let [version, list] of Object.entries(myList)) {\n      newList.push([version, list]);\n    }\n    newList.sort(function (a, b) {\n      a = versionOrder.indexOf(a[0]);\n      b = versionOrder.indexOf(b[0]);\n      if (a > b) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    setEncounterList(newList);\n  }\n  function DisplayEncounters() {\n    if (encounterList.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"encounterVersions\",\n          children: encounterList.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: currentVersion === index ? \"tabSelected\" : \"tab\",\n              onClick: () => setCurrentVersion(index),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${[\"version\", versions[data[0]].col].join(\" \")}`,\n                children: versions[data[0]].letter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), encounterList[currentVersion][1].map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No encounters available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  useEffect(() => {\n    const getEncounters = async () => {\n      const response = await fetch(props.data);\n      const data = await response.json();\n      processEncounters(data);\n    };\n    getEncounters();\n    // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encounter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Encounters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), encounterList ? /*#__PURE__*/_jsxDEV(DisplayEncounters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Encounters, \"22TKSacIL5E/3i0rHnw/P0uMOII=\");\n_c = Encounters;\nvar _c;\n$RefreshReg$(_c, \"Encounters\");","map":{"version":3,"names":["useState","useEffect","versions","versionOrder","Encounters","props","encounterList","setEncounterList","currentVersion","setCurrentVersion","processEncounters","myList","newList","forEach","data","locationUrl","location_area","url","locationName","name","split","map","test","length","toUpperCase","substring","join","version_details","Object","hasOwn","version","push","list","entries","sort","a","b","indexOf","DisplayEncounters","index","col","letter","getEncounters","response","fetch","json"],"sources":["E:/Project2-PokedexLite-main/Project2-PokedexLite-main/src/Assets/Species/Encounters.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport versions from \"../versions\";\nimport versionOrder from \"../versionOrder\";\n\nexport default function Encounters(props) {\n  const [encounterList, setEncounterList] = useState();\n  const [currentVersion, setCurrentVersion] = useState(0);\n\n  function processEncounters(props) {\n    let myList = {};\n    let newList = [];\n\n    props.forEach((data) => {\n      let locationUrl = data.location_area.url;\n      let locationName = data.location_area.name.split(\"-\");\n      locationName = locationName\n        .map((data) => {\n          if (/\\d/.test(data) || data.length < 2) {\n            return data.toUpperCase();\n          } else {\n            return data[0].toUpperCase() + data.substring(1, data.length);\n          }\n        })\n        .join(\" \");\n\n      data.version_details.forEach((data) => {\n        if (Object.hasOwn(myList, data.version.name)) {\n          myList[data.version.name].push({\n            name: locationName,\n            url: locationUrl,\n          });\n        } else {\n          myList[data.version.name] = [\n            { name: locationName, url: locationUrl },\n          ];\n        }\n      });\n    });\n\n    for (let [version, list] of Object.entries(myList)) {\n      newList.push([version, list]);\n    }\n\n    newList.sort(function (a, b) {\n      a = versionOrder.indexOf(a[0]);\n      b = versionOrder.indexOf(b[0]);\n      if (a > b) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    setEncounterList(newList);\n  }\n\n  function DisplayEncounters() {\n    if (encounterList.length !== 0) {\n      return (\n        <>\n          <div className=\"encounterVersions\">\n            {encounterList.map((data, index) => {\n              return (\n                <div\n                  key={index}\n                  className={currentVersion === index ? \"tabSelected\" : \"tab\"}\n                  onClick={() => setCurrentVersion(index)}\n                >\n                  <div\n                    className={`${[\"version\", versions[data[0]].col].join(\n                      \" \"\n                    )}`}\n                  >\n                    {versions[data[0]].letter}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {encounterList[currentVersion][1].map((data, index) => {\n            return <h3 key={index}>{data.name}</h3>;\n          })}\n        </>\n      );\n    } else {\n      return <h3>No encounters available</h3>;\n    }\n  }\n\n  useEffect(() => {\n    const getEncounters = async () => {\n      const response = await fetch(props.data);\n      const data = await response.json();\n      processEncounters(data);\n    };\n    getEncounters();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"encounter\">\n      <h1>Encounters</h1>\n      {encounterList ? <DisplayEncounters /> : \"\"}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}