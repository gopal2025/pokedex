{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project2-PokedexLite-main\\\\Project2-PokedexLite-main\\\\src\\\\Components\\\\SpeciesEntry.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { replaceImage } from \"../Assets/sortPokemon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SpeciesEntry(props) {\n  _s();\n  const navigate = useNavigate();\n  function catchType() {\n    if (props.extended) {\n      const getSpecies = async () => {\n        const response = await fetch(props.data.url);\n        let data = await response.json();\n        let pokeid = data.species.url.split(\"/\").slice(-2, -1);\n        navigate(`/pokemon/${pokeid}`, {\n          state: props.data.url\n        });\n      };\n      getSpecies();\n    } else {\n      navigate(`/pokemon/${props.data.pokeid}`);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.extended ? \"pokemon extended\" : \"pokemon\",\n    onClick: catchType,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemonImageContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.sprite + props.data.pokeid + \".png\",\n        alt: props.data.name,\n        onError: event => replaceImage(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"#\", props.data.pokeid, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), props.data.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeciesEntry, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SpeciesEntry;\nvar _c;\n$RefreshReg$(_c, \"SpeciesEntry\");","map":{"version":3,"names":["React","useNavigate","replaceImage","SpeciesEntry","props","navigate","catchType","extended","getSpecies","response","fetch","data","url","json","pokeid","species","split","slice","state","sprite","name","event"],"sources":["E:/Project2-PokedexLite-main/Project2-PokedexLite-main/src/Components/SpeciesEntry.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { replaceImage } from \"../Assets/sortPokemon\";\n\nexport default function SpeciesEntry(props) {\n  const navigate = useNavigate();\n\n  function catchType() {\n    if (props.extended) {\n      const getSpecies = async () => {\n        const response = await fetch(props.data.url);\n        let data = await response.json();\n        let pokeid = data.species.url.split(\"/\").slice(-2, -1);\n        navigate(`/pokemon/${pokeid}`, { state: props.data.url });\n      };\n      getSpecies();\n    } else {\n      navigate(`/pokemon/${props.data.pokeid}`);\n    }\n  }\n\n  return (\n    <div\n      className={props.extended ? \"pokemon extended\" : \"pokemon\"}\n      onClick={catchType}\n    >\n      <div className=\"pokemonImageContainer\">\n        <img\n          src={props.sprite + props.data.pokeid + \".png\"}\n          alt={props.data.name}\n          onError={(event) => replaceImage(event)}\n        />\n      </div>\n      <div>\n        #{props.data.pokeid}\n        <br />\n        {props.data.name}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,YAAY,QAAQ,uBAAuB;AAAC;AAErD,eAAe,SAASC,YAAY,CAACC,KAAK,EAAE;EAAA;EAC1C,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,SAASK,SAAS,GAAG;IACnB,IAAIF,KAAK,CAACG,QAAQ,EAAE;MAClB,MAAMC,UAAU,GAAG,YAAY;QAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,KAAK,CAACO,IAAI,CAACC,GAAG,CAAC;QAC5C,IAAID,IAAI,GAAG,MAAMF,QAAQ,CAACI,IAAI,EAAE;QAChC,IAAIC,MAAM,GAAGH,IAAI,CAACI,OAAO,CAACH,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtDZ,QAAQ,CAAE,YAAWS,MAAO,EAAC,EAAE;UAAEI,KAAK,EAAEd,KAAK,CAACO,IAAI,CAACC;QAAI,CAAC,CAAC;MAC3D,CAAC;MACDJ,UAAU,EAAE;IACd,CAAC,MAAM;MACLH,QAAQ,CAAE,YAAWD,KAAK,CAACO,IAAI,CAACG,MAAO,EAAC,CAAC;IAC3C;EACF;EAEA,oBACE;IACE,SAAS,EAAEV,KAAK,CAACG,QAAQ,GAAG,kBAAkB,GAAG,SAAU;IAC3D,OAAO,EAAED,SAAU;IAAA,wBAEnB;MAAK,SAAS,EAAC,uBAAuB;MAAA,uBACpC;QACE,GAAG,EAAEF,KAAK,CAACe,MAAM,GAAGf,KAAK,CAACO,IAAI,CAACG,MAAM,GAAG,MAAO;QAC/C,GAAG,EAAEV,KAAK,CAACO,IAAI,CAACS,IAAK;QACrB,OAAO,EAAGC,KAAK,IAAKnB,YAAY,CAACmB,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IACxC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAA,gBACIjB,KAAK,CAACO,IAAI,CAACG,MAAM,eACnB;QAAA;QAAA;QAAA;MAAA,QAAM,EACLV,KAAK,CAACO,IAAI,CAACS,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GApCuBjB,YAAY;EAAA,QACjBF,WAAW;AAAA;AAAA,KADNE,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}