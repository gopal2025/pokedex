{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project2-PokedexLite-main\\\\Project2-PokedexLite-main\\\\src\\\\Assets\\\\Species\\\\Moves.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport moveVersions from \"../moveVersions\";\nimport moveVersionOrder from \"../moveVersionOrder\";\nimport { cleanTitle } from \"../cleanup\";\nimport MoveEntry from \"./MoveEntry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Moves(props) {\n  _s();\n  const [moveList, setMoveList] = useState();\n  const [currentVersion, setCurrentVersion] = useState(0);\n  function processMoves(props) {\n    let myList = {};\n    let newList = [];\n    props.forEach(data => {\n      let moveUrl = data.move.url;\n      let moveName = data.move.name.split(\"-\");\n      moveName = moveName.map(data => {\n        if (/\\d/.test(data) || data.length < 2) {\n          return data.toUpperCase();\n        } else {\n          return data[0].toUpperCase() + data.substring(1, data.length);\n        }\n      }).join(\" \");\n      data.version_group_details.forEach(data => {\n        if (Object.hasOwn(myList, data.version_group.name)) {\n          myList[data.version_group.name].push({\n            name: moveName,\n            url: moveUrl,\n            level: data.level_learned_at,\n            method: cleanTitle(data.move_learn_method.name)\n          });\n        } else {\n          myList[data.version_group.name] = [{\n            name: moveName,\n            url: moveUrl,\n            level: data.level_learned_at,\n            method: cleanTitle(data.move_learn_method.name)\n          }];\n        }\n      });\n    });\n    for (let [version, list] of Object.entries(myList)) {\n      newList.push([version, list]);\n    }\n    newList.sort(function (a, b) {\n      a = moveVersionOrder.indexOf(a[0]);\n      b = moveVersionOrder.indexOf(b[0]);\n      if (a > b) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    newList.map(data => {\n      return data[1].sort(function (a, b) {\n        if (a.level > b.level) {\n          return 1;\n        } else if (a.level < b.level) {\n          return -1;\n        } else if (a.method > b.method) {\n          return 1;\n        } else if (a.method < b.method) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n    });\n    setMoveList(newList);\n  }\n  function DisplayMoves() {\n    if (moveList.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moveVersions\",\n          children: moveList.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: currentVersion === index ? \"tabSelected\" : \"tab\",\n              onClick: () => setCurrentVersion(index),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${[\"version\", moveVersions[data[0]].col].join(\" \")}`,\n                children: moveVersions[data[0]].letter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"moveTable\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              bgcolor: \"rgb(255, 243, 224)\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"sticky\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Move\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"sticky\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"sticky\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Source\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), moveList[currentVersion][1].map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(MoveEntry, {\n                data: data\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No moves available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  useEffect(() => {\n    const getMoves = async () => {\n      processMoves(props.data);\n    };\n    getMoves();\n    // eslint-disable-next-line\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moves\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Moves\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), moveList ? /*#__PURE__*/_jsxDEV(DisplayMoves, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Moves, \"K7h+bJ/mn4Ml1aFaUULrdPVbQD4=\");\n_c = Moves;\nvar _c;\n$RefreshReg$(_c, \"Moves\");","map":{"version":3,"names":["useState","useEffect","moveVersions","moveVersionOrder","cleanTitle","MoveEntry","Moves","props","moveList","setMoveList","currentVersion","setCurrentVersion","processMoves","myList","newList","forEach","data","moveUrl","move","url","moveName","name","split","map","test","length","toUpperCase","substring","join","version_group_details","Object","hasOwn","version_group","push","level","level_learned_at","method","move_learn_method","version","list","entries","sort","a","b","indexOf","DisplayMoves","index","col","letter","getMoves"],"sources":["E:/Project2-PokedexLite-main/Project2-PokedexLite-main/src/Assets/Species/Moves.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport moveVersions from \"../moveVersions\";\nimport moveVersionOrder from \"../moveVersionOrder\";\nimport { cleanTitle } from \"../cleanup\";\nimport MoveEntry from \"./MoveEntry\";\n\nexport default function Moves(props) {\n  const [moveList, setMoveList] = useState();\n  const [currentVersion, setCurrentVersion] = useState(0);\n\n  function processMoves(props) {\n    let myList = {};\n    let newList = [];\n\n    props.forEach((data) => {\n      let moveUrl = data.move.url;\n      let moveName = data.move.name.split(\"-\");\n      moveName = moveName\n        .map((data) => {\n          if (/\\d/.test(data) || data.length < 2) {\n            return data.toUpperCase();\n          } else {\n            return data[0].toUpperCase() + data.substring(1, data.length);\n          }\n        })\n        .join(\" \");\n      data.version_group_details.forEach((data) => {\n        if (Object.hasOwn(myList, data.version_group.name)) {\n          myList[data.version_group.name].push({\n            name: moveName,\n            url: moveUrl,\n            level: data.level_learned_at,\n            method: cleanTitle(data.move_learn_method.name),\n          });\n        } else {\n          myList[data.version_group.name] = [\n            {\n              name: moveName,\n              url: moveUrl,\n              level: data.level_learned_at,\n              method: cleanTitle(data.move_learn_method.name),\n            },\n          ];\n        }\n      });\n    });\n\n    for (let [version, list] of Object.entries(myList)) {\n      newList.push([version, list]);\n    }\n\n    newList.sort(function (a, b) {\n      a = moveVersionOrder.indexOf(a[0]);\n      b = moveVersionOrder.indexOf(b[0]);\n      if (a > b) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    newList.map((data) => {\n      return data[1].sort(function (a, b) {\n        if (a.level > b.level) {\n          return 1;\n        } else if (a.level < b.level) {\n          return -1;\n        } else if (a.method > b.method) {\n          return 1;\n        } else if (a.method < b.method) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n    });\n    setMoveList(newList);\n  }\n\n  function DisplayMoves() {\n    if (moveList.length !== 0) {\n      return (\n        <>\n          <div className=\"moveVersions\">\n            {moveList.map((data, index) => {\n              return (\n                <div\n                  key={index}\n                  className={currentVersion === index ? \"tabSelected\" : \"tab\"}\n                  onClick={() => setCurrentVersion(index)}\n                >\n                  <div\n                    className={`${[\"version\", moveVersions[data[0]].col].join(\n                      \" \"\n                    )}`}\n                  >\n                    {moveVersions[data[0]].letter}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <table className=\"moveTable\">\n            <tbody>\n              <tr bgcolor=\"rgb(255, 243, 224)\">\n                <th className=\"sticky\">\n                  <h2>Move</h2>\n                </th>\n                <th className=\"sticky\">\n                  <h2>Level</h2>\n                </th>\n                <th className=\"sticky\">\n                  <h2>Source</h2>\n                </th>\n              </tr>\n              {moveList[currentVersion][1].map((data, index) => {\n                return <MoveEntry key={index} data={data} />;\n              })}\n            </tbody>\n          </table>\n        </>\n      );\n    } else {\n      return <h3>No moves available</h3>;\n    }\n  }\n\n  useEffect(() => {\n    const getMoves = async () => {\n      processMoves(props.data);\n    };\n    getMoves();\n    // eslint-disable-next-line\n  }, [props]);\n\n  return (\n    <div className=\"moves\">\n      <h1>Moves</h1>\n      {moveList ? <DisplayMoves /> : \"\"}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}