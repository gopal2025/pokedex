{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project2-PokedexLite-main\\\\Project2-PokedexLite-main\\\\src\\\\Assets\\\\Species\\\\EvolutionChain.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport generationSprites from \"../generationSprites\";\nimport { cleanName } from \"../cleanup\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function EvolutionChain(props) {\n  _s();\n  const [evolutionData, setEvolutionData] = useState(\"\");\n  useEffect(() => {\n    const getEvolutionData = async () => {\n      const response = await fetch(props.data.url);\n      let data = await response.json();\n      setEvolutionData(data.chain);\n    };\n    if (props.data === null) {\n      setEvolutionData(\"None\");\n    } else {\n      getEvolutionData();\n    }\n    // eslint-disable-next-line\n  }, []);\n  const resetForm = props.setFormSelected;\n  const currentPoke = props.pokeid.toString();\n  function ProcessPokemon(props) {\n    const pokeid = props.evolData.url.split(\"/\").slice(-2, -1);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentPoke === pokeid[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"evolutionNodeSelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: generationSprites[\"full\"] + pokeid + \".png\",\n          alt: props.evolData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: cleanName(props.evolData.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: `/pokemon/${pokeid}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"evolutionNode\",\n          onClick: () => {\n            window.scrollTo(0, 0);\n            resetForm(0);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: generationSprites[\"full\"] + pokeid + \".png\",\n            alt: props.evolData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: cleanName(props.evolData.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n  function ProcessEvolutionData() {\n    if (evolutionData !== \"None\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"layer1\",\n          children: [/*#__PURE__*/_jsxDEV(ProcessPokemon, {\n            evolData: evolutionData.species\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), evolutionData.evolves_to.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"evolutionArrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), evolutionData.evolves_to.length > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this) : \"\", evolutionData.evolves_to.map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"layer2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"evolutionArrow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ProcessPokemon, {\n                  evolData: data.species\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this), data.evolves_to.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"evolutionArrow\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this), data.evolves_to.length > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"separator\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 29\n                  }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 27\n                  }, this), data.evolves_to.map((data2, index2) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"layer3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"evolutionArrow\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(ProcessPokemon, {\n                        evolData: data2.species\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 33\n                      }, this)]\n                    }, index2, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 31\n                    }, this);\n                  })]\n                }, void 0, true) : \"\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No evolution data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: evolutionData ? /*#__PURE__*/_jsxDEV(ProcessEvolutionData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }, this) : \"Loading...\"\n  }, void 0, false);\n}\n_s(EvolutionChain, \"vRZdFFjyvlHdzg4eQ07eiC9FTp4=\");\n_c = EvolutionChain;\nvar _c;\n$RefreshReg$(_c, \"EvolutionChain\");","map":{"version":3,"names":["React","useState","useEffect","generationSprites","cleanName","Link","EvolutionChain","props","evolutionData","setEvolutionData","getEvolutionData","response","fetch","data","url","json","chain","resetForm","setFormSelected","currentPoke","pokeid","toString","ProcessPokemon","evolData","split","slice","name","window","scrollTo","ProcessEvolutionData","species","evolves_to","length","map","index","data2","index2"],"sources":["E:/Project2-PokedexLite-main/Project2-PokedexLite-main/src/Assets/Species/EvolutionChain.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport generationSprites from \"../generationSprites\";\nimport { cleanName } from \"../cleanup\";\nimport { Link } from \"react-router-dom\";\n\nexport function EvolutionChain(props) {\n  const [evolutionData, setEvolutionData] = useState(\"\");\n\n  useEffect(() => {\n    const getEvolutionData = async () => {\n      const response = await fetch(props.data.url);\n      let data = await response.json();\n      setEvolutionData(data.chain);\n    };\n    if (props.data === null) {\n      setEvolutionData(\"None\");\n    } else {\n      getEvolutionData();\n    }\n    // eslint-disable-next-line\n  }, []);\n  const resetForm = props.setFormSelected;\n  const currentPoke = props.pokeid.toString();\n\n  function ProcessPokemon(props) {\n    const pokeid = props.evolData.url.split(\"/\").slice(-2, -1);\n\n    return (\n      <>\n        {currentPoke === pokeid[0] ? (\n          <div className=\"evolutionNodeSelf\">\n            <img\n              src={generationSprites[\"full\"] + pokeid + \".png\"}\n              alt={props.evolData.name}\n            />\n            <p>{cleanName(props.evolData.name)}</p>\n          </div>\n        ) : (\n          <Link to={`/pokemon/${pokeid}`}>\n            <div\n              className=\"evolutionNode\"\n              onClick={() => {\n                window.scrollTo(0, 0);\n                resetForm(0);\n              }}\n            >\n              <img\n                src={generationSprites[\"full\"] + pokeid + \".png\"}\n                alt={props.evolData.name}\n              />\n              <p>{cleanName(props.evolData.name)}</p>\n            </div>\n          </Link>\n        )}\n      </>\n    );\n  }\n\n  function ProcessEvolutionData() {\n    if (evolutionData !== \"None\") {\n      return (\n        <div>\n          <div className=\"layer1\">\n            <ProcessPokemon evolData={evolutionData.species} />\n            {evolutionData.evolves_to.length !== 0 ? (\n              <>\n                <div className=\"evolutionArrow\" />\n                {evolutionData.evolves_to.length > 1 ? (\n                  <div className=\"separator\" />\n                ) : (\n                  \"\"\n                )}\n                {evolutionData.evolves_to.map((data, index) => {\n                  return (\n                    <div key={index} className=\"layer2\">\n                      <div className=\"evolutionArrow\" />\n                      <ProcessPokemon evolData={data.species} />\n                      {data.evolves_to.length !== 0 ? (\n                        <>\n                          <div className=\"evolutionArrow\" />\n                          {data.evolves_to.length > 1 ? (\n                            <div className=\"separator\" />\n                          ) : (\n                            \"\"\n                          )}\n                          <div />\n                          {data.evolves_to.map((data2, index2) => {\n                            return (\n                              <div key={index2} className=\"layer3\">\n                                <div className=\"evolutionArrow\" />\n                                <ProcessPokemon evolData={data2.species} />\n                              </div>\n                            );\n                          })}\n                        </>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  );\n                })}\n              </>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h3>No evolution data available</h3>\n        </div>\n      );\n    }\n  }\n\n  return <>{evolutionData ? <ProcessEvolutionData /> : \"Loading...\"}</>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}